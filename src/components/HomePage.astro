---
import { ScopeIcon } from "./ScopeIcon";
import {
  type Project,
  listAllResources,
  listProjects,
  type GVK,
} from "@lib/kube";

type Props = {
  project: Project;
  tag: string;
};

const { project, tag } = Astro.props;
const projects = await listProjects();
const resources = await listAllResources(project.slug, tag);

const makeUrl = (gvk: GVK) => {
  const path = `${[gvk.group, gvk.version, gvk.kind].filter(Boolean).join("/")}`;
  if (tag === project.tags[0]) {
    return `/${project.slug}/${path}`;
  }
  return `/${project.slug}/${tag}/${path}`;
};

const categories =
  project.slug === "kubernetes"
    ? [
        "Workloads",
        "Cluster",
        "Networking",
        "Configuration",
        "Storage",
        "Administration",
        "Access Control",
        "Other",
      ]
    : [...new Set([...resources.map((x) => x.category)])].sort();
---

<div class="pb-10">
  <h2 class="text-base font-semibold leading-7 text-primary">
    Reference Guide
  </h2>
  <h1 class="mt-2 text-4xl font-title tracking-tight">
    {project.name} Spec Explorer{" "}
    <span
      class="text-xl font-sans font-semibold tracking-tighter text-muted-foreground"
    >
      {tag}
    </span>
  </h1>
  <p class="mt-2 max-w-4xl text-lg leading-7">
    Find the documentation for all {project.name} resources, properties, types, and
    examples.
  </p>
  <p class="mt-2 max-w-4xl text-base leading-7 text-muted-foreground">
    Select a kind from the list below to get started.
  </p>
</div>

<div class="flex flex-col space-y-8">
  {
    categories.map((category) => (
      <div>
        <h3 class="font-semibold uppercase text-muted-foreground">
          {category}
        </h3>
        <ul class="mt-1 grid grid-cols-1 gap-2 sm:grid-cols-2 sm:gap-4 lg:grid-cols-4">
          {resources
            .filter((x) => x.category === category)
            .sort((left, right) => left.gvk.kind.localeCompare(right.gvk.kind))
            .map((resource) => (
              <a
                href={makeUrl(resource.gvk)}
                class="w-full font-medium border bg-card rounded hover:text-primary relative"
              >
                <div class="flex flex-1 items-center justify-between truncate">
                  <div class="flex-1 truncate px-4 py-2">
                    <p class="text-xs text-muted-foreground">
                      {resource.gvk.group
                        ? `${resource.gvk.group}/${resource.gvk.version}`
                        : resource.gvk.version}
                    </p>
                    {resource.gvk.kind}
                  </div>
                  {resource?.scope && (
                    <ScopeIcon
                      scope={resource.scope}
                      className="h-4 w-4 absolute -top-1 -right-1 text-muted-foreground bg-background"
                      client:load
                    />
                  )}
                </div>
              </a>
            ))}
        </ul>
      </div>
    ))
  }
</div>

<div class="pt-10 pb-4">
  <h2 class="mt-2 text-4xl font-title tracking-tight">
    Popular Kubernetes CRDs
  </h2>
  <p
    class="mt-2 max-w-4xl text-lg tracking-tighter leading-7 text-muted-foreground"
  >
    Documentation for some of the most popular Kubernetes CRDs.
  </p>
</div>

<ul
  class="mt-1 grid grid-cols-1 gap-2 sm:grid-cols-2 sm:gap-4 lg:grid-cols-4 mb-10"
>
  {
    projects
      .sort((a, b) => a.name.localeCompare(b.name))
      .filter((p) => p.slug !== project.slug)
      .map((p) => (
        <a
          href={p.slug === "kubernetes" ? "/" : `/${p.slug}`}
          class="w-full font-medium border rounded bg-card hover:text-primary relative"
        >
          <div class="flex flex-1 gap-1 items-center justify-between truncate p-2">
            <img src={p.logo} class="size-6 rounded" alt={p.name} />
            <div class="flex-1 truncate">{p.name}</div>
          </div>
        </a>
      ))
  }
</ul>
